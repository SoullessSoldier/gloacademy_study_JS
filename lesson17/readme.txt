Урок №17

Скрипты и время выполнения
setTimeout, setInterval и requestAnimationFrame
Объект Date

ESLint

Практика. Пишем Таймер.

Полезные ссылки

requestAnimationFrame
https://html5.by/blog/what-is-requestanimationframe/
RAF
https://frontender.info/request-animation-frame-for-better-performance/
ESLint - настройки
https://eslint.org/docs/rules/
ESLint - статья
https://frontend-stuff.com/blog/eslint/
ESLint - статья 2
https://medium.com/@catwithapple/eslint-%D0%B7%D0%BD%D0%B0%D0%BA%D0%BE%D0%BC%D1%81%D1%82%D0%B2%D0%BE-69ffc19edbf8

ОБЯЗАТЕЛЬНОЕ ЗАДАНИЕ: 


1) Написать таймер обратного отсчета по видео.

2) Переписать таймер с помощью setInterval. 
Будьте внимательны, чтобы setInterval не вызывал сам себя, не превращался в рекурсивный вызов!

3) Проверить, чтобы все работало и не было ошибок в консоли

4) У таймера есть проблема (нужно исправить):

  - Если дата уже прошла, а мы заходим на страницу, то получим
  -1350: -23: -30
  5) Изменить скрипт так, чтобы в таком случае выводилось: 00:00:00 

  - Необходимо подставлять 0 перед значениями, которые состоят 
   из одной цифры (из 4:6:50 сделает 04:06:50)



6) В отдельной папке создать html и js



  Вывести текущий день и время  на страницу в таком формате

Добрый день (утро, вечер, ночь в зависимости от времени суток)
Сегодня: Понедельник
Текущее время:12:05:15 PM
До нового года осталось 175 дней


7) Добавить папку с уроком на GitHub

УСЛОЖНЕННОЕ ЗАДАНИЕ #1: 


Создайте отдельную HTML страницу с полем ввода <input> и пустым параграфом<p></p>

Стилизация на ваше усмотрение



Введённый в поле текст должен отображаться внутри параграфа, но с задержкой в 300 мс.
При этом каждый введённый пользователем в поле символ сбрасывает предыдущий отложенный вызов 
  и запускает новый.

Таким образом программа должна ожидать завершения ввода пользователя и только после этого
 изменять текст в <p></p>

Ссылки в помощь
Микропаттерны оптимизации в Javascript
https://habr.com/ru/post/60957/
Что такое Throttling и Debouncing?
https://medium.com/nuances-of-programming/%D1%87%D1%82%D0%BE-%D1%82%D0%B0%D0%BA%D0%BE%D0%B5-throttling-%D0%B8-debouncing-4f0a839769ef

УСЛОЖНЕННОЕ ЗАДАНИЕ #2: 


1) Задание в CodePen https://codepen.io/gloMax/pen/abzwEmy

2) На отдельной HTML странице!!!
Написать любую анимацию, используя requestAnimationFrame и кнопку, активирующую её
Кнопка должна ставить анимацию на паузу и продолжать анимацию после повторного нажатия 
+ Добавить кнопку reset, которая будет возвращать анимацию в первоначальное состояние


Добавить папку с уроком на GitHub