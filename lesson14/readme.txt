Урок №14
ООП - Наследование, прототипы, конструкторы и классы

JS - прототипно-ориентированный язык
прототип - скрытая ссылка объекта, объект, 
из которого текущий объект черпает недостающие методы и свойства
есть прототипы с базовыми характеристиками и на основе их делаются новые объекты 

Полезные ссылки

ООП в прототипном стиле
https://learn.javascript.ru/prototypes
getComputedStyle, cssText
https://learn.javascript.ru/styles-and-classes#stroka-stiley-style-csstext

Задание
ОБЯЗАТЕЛЬНОЕ ЗАДАНИЕ:  


Часть первая:

Данное задание является отдельной программой, 
поэтому его необходимо выполнять в отдельной папке, 
в которой нужно создать базовую html разметку и файл JavaScript.

1) Сделать класс DomElement, который
   содержит свойства
  - selector, 
  - height, 
  - width, 
  - bg, 
  - fontSize

содержит метод, который создает элемент на странице в зависимости от условия:  

- если строка selector начинается с точки, создаем div с классом
- если строка selector  начинается с решетки # то создаем параграф с id



пример:

если передана строка '.block', то функция конструктор создает элемент с class="block"
если передана строка '#best', то функция конструктор создает элемент с id =best"

с помощью cssText задавать стили: 
  - высотой - height,
  - шириной - width, 
  - background - bg
  - размер текста fontSize 

внутрь созданного блока записывать любой текст. Метод записи может быть любым.

2) Создать новый объект на основе класса DomElement

3) Вызвать его метод чтобы получить элемент на странице

4) Добавить папку с уроком на свой GitHub



Часть вторая:

Это задание относится к нашему приложению "Budget".

1) Переписать наше приложение в ООП стиле, создать Класс (в старом формате использовать es6 не нужно)
2) Создать новый метод в классе, например eventsListeners.
3) Перенести все действия, которые остались за классом внутрь него.
4) Проверить чтобы все работало без ошибок
5) Добавить папку с уроком на свой GitHub 

ДОПОЛНИТЕЛЬНОЕ ЗАДАНИЕ: 

1) Используя class DomElement из основного задания №1, создать квадрат 100 на 100 пикселей. 
Ему необходимо задать фон(background) любого цвета и свойство position: absolute.

2) Поместить его на страницу только после выполнения события DOMContentLoaded.

Внутри тега body  должно быть только подключение скрипта.

3) Написать обработчик события для keydown, который будет принимать callback-функцию. 
Данная функция будет отлавливать нажатие на стрелки клавиатуры. 
В зависимости от нажатой кнопки(Вверх - стрелка вверх, Влево - стрелка влево, 
Вправо - стрелка вправо, Вниз - стрелка вниз) наш квадрат будет перемещаться на 10 пикселей.

4) Добавить папку с уроком на свой GitHub